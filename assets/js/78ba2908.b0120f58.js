"use strict";(self.webpackChunklaguna_docs=self.webpackChunklaguna_docs||[]).push([[9638],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,k=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},49548:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={},o="Project structure",l={unversionedId:"contributing/backend/project_structure",id:"contributing/backend/project_structure",title:"Project structure",description:"Only important files and dirs are listed here.",source:"@site/docs/contributing/backend/11-project_structure.md",sourceDirName:"contributing/backend",slug:"/contributing/backend/project_structure",permalink:"/laguna-docs/docs/contributing/backend/project_structure",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"apiDocsSidebar",previous:{title:"SQL (Squeal) notes",permalink:"/laguna-docs/docs/contributing/backend/squeal"},next:{title:"Submitting changes",permalink:"/laguna-docs/docs/contributing/backend/submitting_changes"}},c={},s=[],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"project-structure"},"Project structure"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Only important files and dirs are listed here.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".github/")," contains GitHub Actions definitions for CI/CD.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dependabot.yml")," contains config for automatic dependency updates."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"workflows/")," contains CI/CD workflows.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rust.yml")," contains CI workflow for Rust."))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".cargo/config.toml")," contains GLOBAL project config for Cargo and Rust. This is because we have a ",(0,r.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/book/ch14-03-cargo-workspaces.html"},"Cargo Workspace")," and its easier to have global config."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/")," root directory contains root Cargo Crate ",(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend")," and definition of ",(0,r.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/book/ch14-03-cargo-workspaces.html"},"Cargo Workspace"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"src/main.rs")," is server entry point."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"crates/")," contains Cargo Workspace members (sub-Crates) of the project.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-internal/")," is a crate that contains re-exports of all other ",(0,r.kt)("inlineCode",{parentName:"li"},"crates/*")," and is used by ",(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend")," (root crate) to access all other crates.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-internal/src/lib.rs")," re-exporting can be seen here."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-api/")," contains API endpoints."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-dto/")," contains DTOs (data-transfer-objects) used by ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/SloveniaEngineering/laguna-frontend"},"laguna-frontend"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-model/")," contains DB models and relations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-config/")," contains custom config structs for ",(0,r.kt)("inlineCode",{parentName:"li"},"Laguna.toml")," config."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-setup/")," contains App setup logic (for tests, dev and production) and relies heavily from definitions in ",(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-config"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-middleware/")," contains application logic from API to DB."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-tracker/")," contains torrent tracking system commons."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-tracker-http/")," implements TCP-based (HTTP) tracker."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-tracker-udp/")," implements UDP-based tracker."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"laguna-backend-tracker-ws/")," implements WebRTC-based (WebSocker) tracker."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"migrations/")," contains SQL migrations for DB."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"configs/")," contains config files for development, testing and deploy."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"scripts/")," contains scripts for development, testing and deploy.")))}d.isMDXComponent=!0}}]);